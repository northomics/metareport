% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metareport.R
\name{metareport}
\alias{metareport}
\title{wrapper function of rmarkdown::render for opencpu to render a report for maxquant summary from markdown template}
\usage{
metareport(
  type = "summary",
  file,
  meta = NULL,
  template_version = "stable",
  url_endpoint = "https://gitlab.com/iMetaLab/rmdocpu/-/raw/master/",
  output_format = "html_document",
  output_dir = NULL
)
}
\arguments{
\item{type}{string, type of the result to generate the report on, one of summary, peptide,protein,taxon, function}

\item{file}{string, file name/path of the summary.txt from maxquant result txt folder, mandatory}

\item{meta}{string, file name/path of the meta file, optional, a tsv file, generated by MetaLab2.0, 1st columns as sample name, 2nd column as experiment name, 3rd column and after as grouping information.Al columns of grouping information will be ploted repectively,}

\item{template_version}{string, can be "latest","stable", or a specific number, like "1.0", "1.1". Default as "stable". Will use the local template in the package (system.file("rmd","MQ_report_summary.Rmd", package = "metareport")), otherwise, it will try to curl the corresponding file from the deposit from either gitlab/github. Besure to use the correct number. If the version defined does not exist, or failed to retrieve from the deposit, it will use the stable version instead.}

\item{url_endpoint}{if template_version is other than stable, a url_endpoint has to be set corretly, otherwise, a “stable” version will be used instead. see default as example: https://gitlab.com/iMetaLab/rmdocpu/-/raw/master/ if you want to use customized template}

\item{output_format}{see output_format in render, default as html, which has interactivity with plotly support}

\item{output_dir}{see output_dir in render, default as the same path of the rmarkdown input}
}
\value{
no direct return, but write an output.html to the temp session on the opencpu server
}
\description{
This function is destined for working on the opencpu server end, accepting file posted by front end to produce an html file to send to the front end.
It also works in  stand-alone mode, to generate a report file, output.html, using a public accessible rmd file on github. Of course, this need internet connection to run
}
\examples{
  datafile <- system.file("extdata","summary.txt", package = "metareport")
  metafile <-system.file("extdata","metainfo.txt", package = "metareport")
  
  # generate a report without meta information 
  metareport(type = "summary", file = datafile, output_dir =  getwd())
  # generate a report with meta information
   metareport(type = "summary",file = datafile , meta =metafile, output_dir =  getwd())

}
\seealso{
\code{\link{render}}
}
